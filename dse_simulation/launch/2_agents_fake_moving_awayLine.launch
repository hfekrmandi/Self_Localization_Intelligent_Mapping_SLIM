<launch>
  <arg name="first_tb3_prefix" default="tb3_0"/>
  <arg name="first_tb3_model"  default="burger_5"/>
  <arg name="first_tb3_x" 	default="-1.0"/>
  <arg name="first_tb3_y" 	default=" 0.0"/>
  <arg name="first_tb3_z" 	default=" 0.0"/>
  <arg name="first_tb3_yaw"    default=" 1.57079632679"/>
  <arg name="first_tb3_id"     default=" 5"/>
  <arg name="first_tb3_tf"     default="tb3_0/base_footprint"/>
  
  <arg name="second_tb3_prefix" default="tb3_1"/>
  <arg name="second_tb3_model" default="burger_6"/>
  <arg name="second_tb3_x" 	default=" 0.0"/>
  <arg name="second_tb3_y" 	default=" 0.0"/>
  <arg name="second_tb3_z" 	default=" 0.0"/>
  <arg name="second_tb3_yaw"   default=" 1.57079632679"/>
  <arg name="second_tb3_id"    default=" 6"/>
  <arg name="second_tb3_tf"     default="tb3_1/base_footprint"/>

  <arg name="landmark_1_x"    default="-1.5"/>
  <arg name="landmark_1_y"    default=" 3.0"/>
  <arg name="landmark_1_yaw"  default=" 4.7124"/>
  <arg name="landmark_1_id"   default="0"/>
  <arg name="landmark_1_name" default="aruco_marker_0"/>

  <arg name="landmark_2_x"    default="-0.5"/>
  <arg name="landmark_2_y"    default=" 3.0"/>
  <arg name="landmark_2_yaw"  default=" 4.7124"/>
  <arg name="landmark_2_id"   default="1"/>
  <arg name="landmark_2_name" default="aruco_marker_1"/>

  <arg name="landmark_3_x"    default="-1.5"/>
  <arg name="landmark_3_y"    default=" 6.0"/>
  <arg name="landmark_3_yaw"  default=" 4.7124"/>
  <arg name="landmark_3_id"   default="2"/>
  <arg name="landmark_3_name" default="aruco_marker_2"/>

  <arg name="landmark_4_x"    default="-0.5"/>
  <arg name="landmark_4_y"    default=" 6.0"/>
  <arg name="landmark_4_yaw"  default=" 4.7124"/>
  <arg name="landmark_4_id"   default="3"/>
  <arg name="landmark_4_name" default="aruco_marker_3"/>

  <arg name="world_id"  default="0"/>
  <arg name="world_name"  default="world"/>
  <arg name="dim_state"  default="6"/>
  <arg name="marker_length"  default="0.1"/>
  <arg name="aruco_cal_file"  default="calibration_1080p.p"/>
  <arg name="data_skip"  default="4"/>
  
  <!-- Launch gazebo world -->
  <arg name="debug" default="false" />
  <arg name="gui" default="true" />
  <arg name="pause" default="false" />
  <arg name="world" default="$(find dse_simulation)/world/2x2_aruco_landmarks_away_line.world" />
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg pause)" />
    <arg name="use_sim_time" value="true" />
  </include>

  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find dse_simulation)/rviz/3_agents_4_tags_dse_odom_config.rviz" />

  <group ns = "$(arg first_tb3_prefix)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find dse_turtlebot_descriptions)/urdf/turtlebot3_$(arg first_tb3_model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg first_tb3_prefix)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3_prefix) -x $(arg first_tb3_x) -y $(arg first_tb3_y) -z $(arg first_tb3_z) -Y $(arg first_tb3_yaw) -param robot_description" />
  </group>
  
  <group ns = "$(arg second_tb3_prefix)">
    <param name="robot_description" command="$(find xacro)/xacro --inorder $(find dse_turtlebot_descriptions)/urdf/turtlebot3_$(arg second_tb3_model).urdf.xacro" />

    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
      <param name="publish_frequency" type="double" value="50.0" />
      <param name="tf_prefix" value="$(arg second_tb3_prefix)" />
    </node>

    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg second_tb3_prefix) -x $(arg second_tb3_x) -y $(arg second_tb3_y) -z $(arg second_tb3_z) -Y $(arg second_tb3_yaw) -param robot_description" />
  </group>
  
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg landmark_1_name)_tf_broadcaster"  args="$(arg landmark_1_x) $(arg landmark_1_y) 0 $(arg landmark_1_yaw) 0 0 /world /$(arg landmark_1_name) 10"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg landmark_2_name)_tf_broadcaster"  args="$(arg landmark_2_x) $(arg landmark_2_y) 0 $(arg landmark_2_yaw) 0 0 /world /$(arg landmark_2_name) 10"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg landmark_3_name)_tf_broadcaster"  args="$(arg landmark_3_x) $(arg landmark_3_y) 0 $(arg landmark_3_yaw) 0 0 /world /$(arg landmark_3_name) 10"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg landmark_4_name)_tf_broadcaster"  args="$(arg landmark_4_x) $(arg landmark_4_y) 0 $(arg landmark_4_yaw) 0 0 /world /$(arg landmark_4_name) 10"/>
  
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3_prefix)_tf_broadcaster"  args="0 0 0 0 0 0 /world /$(arg first_tb3_prefix)/odom 10"/>
  <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3_prefix)_tf_broadcaster"  args="0 0 0 0 0 0 /world /$(arg second_tb3_prefix)/odom 10"/>
  
  <node pkg="dse_simulation" type="store_results.py" name="dse_store_results_node" output="screen">
    <param name="n_params" value="3" />
    <rosparam param="objects" subst_value="True"> [$(arg first_tb3_prefix), $(arg second_tb3_prefix), $(arg world_name)]</rosparam>
    <rosparam param="object_ids" subst_value="True"> [$(arg first_tb3_id), $(arg second_tb3_id), $(arg world_id)]</rosparam>
    <rosparam param="agent_ids" subst_value="True"> [$(arg first_tb3_id), $(arg second_tb3_id)]</rosparam>
    <param name="dim_state" type="int" value="$(arg dim_state)" />
  </node>

  <node pkg="dse_simulation" type="consensus_10hz.py" name="dse_consensus_node" output="screen">
    <rosparam param="objects" subst_value="True"> [$(arg first_tb3_prefix), $(arg second_tb3_prefix)]</rosparam>
    <param name="dim_state" type="int" value="$(arg dim_state)" />
  </node>

  <group ns = "$(arg first_tb3_prefix)">
    <node pkg="dse_simulation" type="fake_pose_sensor.py" name="fake_pose_sensor_node" output="screen">
      <param name="prefix" value="$(arg first_tb3_prefix)" />
      <param name="rate" type="int" value="10" />
      <param name="meas_threshold" type="double" value="10" />
      <param name="id" type="int" value="$(arg first_tb3_id)" />
      <rosparam param="id_to_tf" subst_value="True"> 
                [[$(arg landmark_1_id), $(arg landmark_1_name)], [$(arg landmark_2_id), $(arg landmark_2_name)], [$(arg landmark_3_id), $(arg landmark_3_name)], [$(arg landmark_4_id), $(arg landmark_4_name)], [$(arg first_tb3_id), $(arg first_tb3_tf)], [$(arg second_tb3_id), $(arg second_tb3_tf)]]
      </rosparam>
      <rosparam param="fixed_relations" subst_value="True"> 
                [[$(arg world_id), $(arg world_name), [$(arg landmark_1_id), $(arg landmark_2_id), $(arg landmark_3_id), $(arg landmark_4_id)]]]
      </rosparam>
    </node>

    <node pkg="dse_simulation" type="information_filter_fake_meas.py" name="information_filter_node" output="screen">
      <param name="prefix" value="$(arg first_tb3_prefix)" />
      <param name="id" type="int" value="$(arg first_tb3_id)" />
      <param name="dim_state" type="int" value="$(arg dim_state)" />
      <rosparam param="fixed_ids" subst_value="True"> 
                [0]
      </rosparam>
      <rosparam param="fixed_states" subst_value="True"> 
                [[0, 0, 0, 0, 0, 0]]
      </rosparam>
      <rosparam param="initial_ids" subst_value="True"> 
                [$(arg first_tb3_id), $(arg second_tb3_id)]
      </rosparam>
      <rosparam param="initial_estimates" subst_value="True"> 
                [$(arg first_tb3_x),  $(arg first_tb3_y),  $(arg first_tb3_yaw),  0, 0, 0,
                 $(arg second_tb3_x),  $(arg second_tb3_y),  $(arg second_tb3_yaw),  0, 0, 0]
      </rosparam>
    </node>

    <node pkg="dse_simulation" type="visualize_estimates_odometry.py" name="dse_gazebo_visualization_node" output="screen">
      <param name="prefix" value="$(arg first_tb3_prefix)" />
      <param name="id" type="int" value="$(arg first_tb3_id)" />
      <param name="dim_state" type="int" value="$(arg dim_state)" />
    </node>

    <node pkg="dse_simulation" type="circle_controller.py" name="circle_controller_node" output="screen">
      <param name="prefix" value="$(arg first_tb3_prefix)" />
      <param name="fwd_vel" type="double" value="0.1" />
    </node>
  </group>

  <group ns = "$(arg second_tb3_prefix)">
    <node pkg="dse_simulation" type="fake_pose_sensor.py" name="fake_pose_sensor_node" output="screen">
      <param name="prefix" value="$(arg second_tb3_prefix)" />
      <param name="rate" type="int" value="10" />
      <param name="meas_threshold" type="double" value="10" />
      <param name="id" type="int" value="$(arg second_tb3_id)" />
      <rosparam param="id_to_tf" subst_value="True"> 
                [[$(arg landmark_1_id), $(arg landmark_1_name)], [$(arg landmark_2_id), $(arg landmark_2_name)], [$(arg landmark_3_id), $(arg landmark_3_name)], [$(arg landmark_4_id), $(arg landmark_4_name)], [$(arg first_tb3_id), $(arg first_tb3_tf)], [$(arg second_tb3_id), $(arg second_tb3_tf)]]
      </rosparam>
      <rosparam param="fixed_relations" subst_value="True"> 
                [[$(arg world_id), $(arg world_name), [$(arg landmark_1_id), $(arg landmark_2_id), $(arg landmark_3_id), $(arg landmark_4_id)]]]
      </rosparam>
    </node>

    <node pkg="dse_simulation" type="information_filter_fake_meas.py" name="information_filter_node" output="screen">
      <param name="prefix" value="$(arg second_tb3_prefix)" />
      <param name="id" type="int" value="$(arg second_tb3_id)" />
      <param name="dim_state" type="int" value="$(arg dim_state)" />
      <rosparam param="fixed_ids" subst_value="True"> 
                [0]
      </rosparam>
      <rosparam param="fixed_states" subst_value="True"> 
                [[0, 0, 0, 0, 0, 0]]
      </rosparam>
      <rosparam param="initial_ids" subst_value="True"> 
                [$(arg first_tb3_id), $(arg second_tb3_id)]
      </rosparam>
      <rosparam param="initial_estimates" subst_value="True"> 
                [$(arg first_tb3_x),  $(arg first_tb3_y),  $(arg first_tb3_yaw),  0, 0, 0,
                 $(arg second_tb3_x),  $(arg second_tb3_y),  $(arg second_tb3_yaw),  0, 0, 0]
      </rosparam>
    </node>

    <node pkg="dse_simulation" type="visualize_estimates_odometry.py" name="dse_gazebo_visualization_node" output="screen">
      <param name="prefix" value="$(arg second_tb3_prefix)" />
      <param name="id" type="int" value="$(arg second_tb3_id)" />
      <param name="dim_state" type="int" value="$(arg dim_state)" />
    </node>

    <node pkg="dse_simulation" type="circle_controller.py" name="circle_controller_node" output="screen">
      <param name="prefix" value="$(arg second_tb3_prefix)" />
      <param name="fwd_vel" type="double" value="0.1" />
    </node>
  </group>

</launch>
